name: CI

on:
  workflow_call:  # Allow this workflow to be called by other workflows
  pull_request:   # Still run on PRs but not on every push to main
    branches: [main]
  workflow_dispatch: # Allow manual triggering

permissions:
  contents: read
  id-token: write
  actions: write  # Required for cache purging

jobs:
  tests:
    runs-on: ubuntu-latest
    outputs:
      success: ${{ steps.result.outputs.success }}
    steps:
      - uses: actions/checkout@v4
      - name: Install Nix
        uses: DeterminateSystems/nix-installer-action@main
        with:
          extra-conf: |
            keep-env-derivations = true
            keep-outputs = true
      - name: Set up Nix cache
        uses: nix-community/cache-nix-action@v6
        with:
          primary-key: nix-${{ runner.os }}-${{ hashFiles('**/*.nix', '**/flake.lock') }}
          restore-prefixes-first-match: nix-${{ runner.os }}-
          gc-max-store-size-linux: 2G
          purge: true
          purge-prefixes: nix-${{ runner.os }}-
          purge-created: 604800  # 7 days
          purge-last-accessed: 604800  # 7 days
          purge-primary-key: never
      - name: Run tests with Nix
        run: |
          nix develop --command bash -c "
            cargo fmt --all -- --check && \
            cargo clippy -- -D warnings && \
            cargo test && \
            wasm-pack test --headless --chrome
          "
      - name: Set result output
        id: result
        run: echo "success=true" >> $GITHUB_OUTPUT 